CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

PROJECT(Netium CXX)

# Where the binaries will be
SET(EXECUTABLE_OUTPUT_PATH bin/${CMAKE_BUILD_TYPE})

# Files used in all ports
FILE(
        GLOB_RECURSE
        SOURCE_FILES


)

FILE(
	GLOB_RECURSE
	HEADER_FACTORY

	HeaderFactory.h
	HeaderFactory.cpp
)

SOURCE_GROUP("Header Files\\API_HEADER" FILES ${HEADER_API})
SOURCE_GROUP("Source Files\\API_SOURCE" FILES ${SOURCE_API})

# Remove Unix files from Windows build
IF(WIN32)
    LIST(REMOVE_ITEM SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/UnixSock.cpp")
    LIST(REMOVE_ITEM SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/UnixSock.hpp")
ENDIF()

# Remove Windows files from Unix build
IF(UNIX)
    LIST(REMOVE_ITEM SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/WinSock.cpp")
    LIST(REMOVE_ITEM SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/WinSock.hpp")
ENDIF()

ADD_EXECUTABLE(
        Netium
        ${SOURCE_FILES}
		${SOURCE_API}
		${HEADER_API}
		${HEADER_FACTORY}
)

IF(WIN32)
    TARGET_LINK_LIBRARIES(
            Netium
            Ws2_32
    )
ENDIF()

IF(UNIX)
    TARGET_LINK_LIBRARIES(
            Netium
            pthread
    )
ENDIF()

# Enable C++11
TARGET_COMPILE_FEATURES(Netium PRIVATE cxx_range_for)